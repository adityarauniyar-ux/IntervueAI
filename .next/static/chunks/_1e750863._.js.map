{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/lib/actions/auth.action.ts"],"sourcesContent":["'use server';\nimport { auth, db } from \"@/firebass/admin\";\nimport { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\nconst TWO_WEEKS = 60 * 60 * 24 * 14;\n\nexport async function signUp(params: SignUpParams){\n    const { uid, name, email } = params;\n    try{\n      const userRecord = await db.collection('users').doc(uid).get();\n      if (userRecord.exists){\n        return {\n            success: false,\n            message: 'User already exists. Please sign in Instead'\n        }\n      }\n      await db.collection('users').doc(uid).set({name, email});\n      return {\n        success: true,\n        message: 'User created successfully',\n      }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    } catch (e: any) {\n        console.error('Error creating a user', e);\n        if (e.code === 'auth/email-already-in-use'){\n            return { success: false, message: 'Email already in use' };\n        }\n   \n    return {\n        success: false,\n        message: 'Failed to create an account',\n    }\n}\n}\n\nexport async function signIn(params: SignInParams){\n    const { email, idToken} = params;\n    try {\n        const userRecord = await auth.getUserByEmail(email);\n        if(!userRecord){\n            return{\n                success: false,\n                message: 'User does not exist. Create an account instead.'\n            }\n        }\n        await setSessionCookie(idToken);\n    } catch (e) {\n        console.log(e);\n    }\n}\n\nexport async function setSessionCookie(idToken: string){\n    const cookieStore = await cookies();\n\n    const sessionCookie = await auth.createSessionCookie(idToken, {expiresIn: TWO_WEEKS   * 1000 });\n\n    cookieStore.set('session', sessionCookie,{\n        maxAge: TWO_WEEKS,\n        httpOnly: true,\n        secure: process.env.NODE_ENV === 'production',\n        path:'/',\n        sameSite:'lax',\n    })\n}\n\nexport async function getCurrentUser(): Promise<User | null> {\n    const cookieStore = await cookies();\n    const sessionCookie = cookieStore.get(\"session\")?.value;\n\n    if(!sessionCookie) return null;\n    try {\n        const decodedClaims = await auth.verifySessionCookie(sessionCookie, true);\n\n        const userRecord = await db. collection('users')\n        .doc(decodedClaims.uid)\n        .get();\n        if(!userRecord.exists)return null;\n        return {\n            ...userRecord.data(),\n            id: userRecord.id,\n        } as User;\n    } catch (e) {\n        console.log('Error verifying session cookie', e);\n        return null;\n    }\n}\n\nexport async function isAuthenticated(){\n    const user = await getCurrentUser();\n\n    return !!user;\n}\n\n// Sign out user by clearing the session cookie\nexport async function signOut() {\n    const cookieStore = await cookies();\n  \n    cookieStore.delete(\"session\");\n    \n  }\n\n\n"],"names":[],"mappings":";;;;;;;;;;IAMsB;IA6BA;IAgBA;IAcA;IAsBA;IAOA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/components/SignOutButton.tsx"],"sourcesContent":["'use client'\n\nimport { signOut } from '@/lib/actions/auth.action'\nimport Image from 'next/image';\n\n\nconst SignOutButton = () => {\n  const handleSignOut = () => {\n    signOut()\n  }\n\n  return (\n    <>\n      <button onClick={handleSignOut} title='Logout' className=\"flex items-center cursor-pointer gap-2 \">\n      <Image src=\"/logout.png\" alt=\"Logout Icon\" width={38} height={32} />\n     \n    </button>\n      </>\n  );\n}\n\nexport default SignOutButton\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAMA,MAAM,gBAAgB;IACpB,MAAM,gBAAgB;QACpB,CAAA,GAAA,mIAAA,CAAA,UAAO,AAAD;IACR;IAEA,qBACE;kBACE,cAAA,6LAAC;YAAO,SAAS;YAAe,OAAM;YAAS,WAAU;sBACzD,cAAA,6LAAC,gIAAA,CAAA,UAAK;gBAAC,KAAI;gBAAc,KAAI;gBAAc,OAAO;gBAAI,QAAQ;;;;;;;;;;;;AAKpE;KAbM;uCAeS","debugId":null}}]
}