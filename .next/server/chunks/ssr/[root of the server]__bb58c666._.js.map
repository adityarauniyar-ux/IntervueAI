{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/constants/index.ts"],"sourcesContent":["import { CreateAssistantDTO } from \"@vapi-ai/web/dist/api\";\nimport { z } from \"zod\";\n\nexport const mappings = {\n  \"react.js\": \"react\",\n  reactjs: \"react\",\n  react: \"react\",\n  \"next.js\": \"nextjs\",\n  nextjs: \"nextjs\",\n  next: \"nextjs\",\n  \"vue.js\": \"vuejs\",\n  vuejs: \"vuejs\",\n  vue: \"vuejs\",\n  \"express.js\": \"express\",\n  expressjs: \"express\",\n  express: \"express\",\n  \"node.js\": \"nodejs\",\n  nodejs: \"nodejs\",\n  node: \"nodejs\",\n  mongodb: \"mongodb\",\n  mongo: \"mongodb\",\n  mongoose: \"mongoose\",\n  mysql: \"mysql\",\n  postgresql: \"postgresql\",\n  sqlite: \"sqlite\",\n  firebase: \"firebase\",\n  docker: \"docker\",\n  kubernetes: \"kubernetes\",\n  aws: \"aws\",\n  azure: \"azure\",\n  gcp: \"gcp\",\n  digitalocean: \"digitalocean\",\n  heroku: \"heroku\",\n  photoshop: \"photoshop\",\n  \"adobe photoshop\": \"photoshop\",\n  html5: \"html5\",\n  html: \"html5\",\n  css3: \"css3\",\n  css: \"css3\",\n  sass: \"sass\",\n  scss: \"sass\",\n  less: \"less\",\n  tailwindcss: \"tailwindcss\",\n  tailwind: \"tailwindcss\",\n  bootstrap: \"bootstrap\",\n  jquery: \"jquery\",\n  typescript: \"typescript\",\n  ts: \"typescript\",\n  javascript: \"javascript\",\n  js: \"javascript\",\n  \"angular.js\": \"angular\",\n  angularjs: \"angular\",\n  angular: \"angular\",\n  \"ember.js\": \"ember\",\n  emberjs: \"ember\",\n  ember: \"ember\",\n  \"backbone.js\": \"backbone\",\n  backbonejs: \"backbone\",\n  backbone: \"backbone\",\n  nestjs: \"nestjs\",\n  graphql: \"graphql\",\n  \"graph ql\": \"graphql\",\n  apollo: \"apollo\",\n  webpack: \"webpack\",\n  babel: \"babel\",\n  \"rollup.js\": \"rollup\",\n  rollupjs: \"rollup\",\n  rollup: \"rollup\",\n  \"parcel.js\": \"parcel\",\n  parceljs: \"parcel\",\n  npm: \"npm\",\n  yarn: \"yarn\",\n  git: \"git\",\n  github: \"github\",\n  gitlab: \"gitlab\",\n  bitbucket: \"bitbucket\",\n  figma: \"figma\",\n  prisma: \"prisma\",\n  redux: \"redux\",\n  flux: \"flux\",\n  redis: \"redis\",\n  selenium: \"selenium\",\n  cypress: \"cypress\",\n  jest: \"jest\",\n  mocha: \"mocha\",\n  chai: \"chai\",\n  karma: \"karma\",\n  vuex: \"vuex\",\n  \"nuxt.js\": \"nuxt\",\n  nuxtjs: \"nuxt\",\n  nuxt: \"nuxt\",\n  strapi: \"strapi\",\n  wordpress: \"wordpress\",\n  contentful: \"contentful\",\n  netlify: \"netlify\",\n  vercel: \"vercel\",\n  \"aws amplify\": \"amplify\",\n};\n\n\n  export const interviewer: CreateAssistantDTO = {\n  name: \"Interviewer\",\n  firstMessage:\n    \"Hello! Thank you for taking the time to speak with me today. I'm excited to learn more about you and your experience.\",\n  transcriber: {\n    provider: \"deepgram\",\n    model: \"nova-2\",\n    language: \"en\",\n  },\n  voice: {\n    provider: \"11labs\",\n    voiceId: \"sarah\",\n    stability: 0.4,\n    similarityBoost: 0.8,\n    speed: 0.9,\n    style: 0.5,\n    useSpeakerBoost: true,\n  },\n  model: {\n    provider: \"openai\",\n    model: \"gpt-4\",\n    messages: [\n      {\n        role: \"system\",\n        content: `You are a professional job interviewer conducting a real-time voice interview with a candidate. Your goal is to assess their qualifications, motivation, and fit for the role.\n\nInterview Guidelines:\nFollow the structured question flow:\n{{questions}}\n\nEngage naturally & react appropriately:\nListen actively to responses and acknowledge them before moving forward.\nAsk brief follow-up questions if a response is vague or requires more detail.\nKeep the conversation flowing smoothly while maintaining control.\nBe professional, yet warm and welcoming:\n\nUse official yet friendly language.\nKeep responses concise and to the point (like in a real voice interview).\nAvoid robotic phrasing—sound natural and conversational.\nAnswer the candidate’s questions professionally:\n\nIf asked about the role, company, or expectations, provide a clear and relevant answer.\nIf unsure, redirect the candidate to HR for more details.\n\nConclude the interview properly:\nThank the candidate for their time.\nInform them that the company will reach out soon with feedback.\nEnd the conversation on a polite and positive note. Thank the user for using IntervueAi, and if they found it helpful, kindly encourage them to give it a star on GitHub.\n\n\n- Be sure to be professional and polite.\n- Keep all your responses short and simple. Use official language, but be kind and welcoming.\n- This is a voice conversation, so keep your responses short, like in a real conversation. Don't ramble for too long.`,\n      },\n    ],\n  },\n};\n\n  export const feedbackSchema = z.object({\n  totalScore: z.number(),\n  categoryScores: z.tuple([\n    z.object({\n      name: z.literal(\"Communication Skills\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Technical Knowledge\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Problem Solving\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Cultural Fit\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n    z.object({\n      name: z.literal(\"Confidence and Clarity\"),\n      score: z.number(),\n      comment: z.string(),\n    }),\n  ]),\n  strengths: z.array(z.string()),\n  areasForImprovement: z.array(z.string()),\n  finalAssessment: z.string(),\n});\n\n\nexport const interviewCovers = [\n  \"/tcs.png\",\n  \"/accenture.png\",\n  \"/infosys.jpg\",\n  \"/adobe.png\",\n  \"/amazon.png\",\n  \"/facebook.png\",\n  \"/google.png\",\n  \"/pinterest.png\",\n  \"/quora.png\",\n  \"/wipro.png\",\n  \"/flipkart.png\",\n  \"/telegram.png\",\n  \"/microsoft.png\",\n  \"/hcl.jpg\",\n];\n\nexport const dummyInterviews: Interview[] = [\n  {\n    id: \"1\",\n    userId: \"user1\",\n    role: \"Frontend Developer\",\n    type: \"Technical\",\n    techstack: [\"React\", \"TypeScript\", \"Next.js\", \"Tailwind CSS\"],\n    level: \"Junior\",\n    questions: [\"What is React?\"],\n    finalized: false,\n    createdAt: \"2024-03-15T10:00:00Z\",\n  },\n  {\n    id: \"2\",\n    userId: \"user1\",\n    role: \"Full Stack Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n  {\n    id: \"3\",\n    userId: \"user1\",\n    role: \"Backend Developer\",\n    type: \"Mixed\",\n    techstack: [\"Node.js\", \"Express\", \"MongoDB\", \"React\"],\n    level: \"Senior\",\n    questions: [\"What is Node.js?\"],\n    finalized: false,\n    createdAt: \"2024-03-14T15:30:00Z\",\n  },\n];\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/lib/utils.ts"],"sourcesContent":["import { interviewCovers, mappings } from \"@/constants\";\nimport { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nconst techIconBaseURL = \"https://cdn.jsdelivr.net/gh/devicons/devicon/icons\";\n\nconst normalizeTechName = (tech: string) => {\n  const key = tech.toLowerCase().replace(/\\.js$/, \"\").replace(/\\s+/g, \"\");\n  return mappings[key as keyof typeof mappings];\n};\n\nconst checkIconExists = async (url: string) => {\n  try {\n    const response = await fetch(url, { method: \"HEAD\" });\n    return response.ok; // Returns true if the icon exists\n  } catch {\n    return false;\n  }\n};\n\nexport const getTechLogos = async (techArray: string[]) => {\n  const logoURLs = techArray.map((tech) => {\n    const normalized = normalizeTechName(tech);\n    return {\n      tech,\n      url: `${techIconBaseURL}/${normalized}/${normalized}-original.svg`,\n    };\n  });\n\n  const results = await Promise.all(\n    logoURLs.map(async ({ tech, url }) => ({\n      tech,\n      url: (await checkIconExists(url)) ? url : \"/tech.svg\",\n    }))\n  );\n\n  return results;\n};\n\nexport const getRandomInterviewCover = () => {\n  const randomIndex = Math.floor(Math.random() * interviewCovers.length);\n  return `/covers${interviewCovers[randomIndex]}`;\n};\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB;AAEA,MAAM,kBAAkB;AAExB,MAAM,oBAAoB,CAAC;IACzB,MAAM,MAAM,KAAK,WAAW,GAAG,OAAO,CAAC,SAAS,IAAI,OAAO,CAAC,QAAQ;IACpE,OAAO,kHAAA,CAAA,WAAQ,CAAC,IAA6B;AAC/C;AAEA,MAAM,kBAAkB,OAAO;IAC7B,IAAI;QACF,MAAM,WAAW,MAAM,MAAM,KAAK;YAAE,QAAQ;QAAO;QACnD,OAAO,SAAS,EAAE,EAAE,kCAAkC;IACxD,EAAE,OAAM;QACN,OAAO;IACT;AACF;AAEO,MAAM,eAAe,OAAO;IACjC,MAAM,WAAW,UAAU,GAAG,CAAC,CAAC;QAC9B,MAAM,aAAa,kBAAkB;QACrC,OAAO;YACL;YACA,KAAK,GAAG,gBAAgB,CAAC,EAAE,WAAW,CAAC,EAAE,WAAW,aAAa,CAAC;QACpE;IACF;IAEA,MAAM,UAAU,MAAM,QAAQ,GAAG,CAC/B,SAAS,GAAG,CAAC,OAAO,EAAE,IAAI,EAAE,GAAG,EAAE,GAAK,CAAC;YACrC;YACA,KAAK,AAAC,MAAM,gBAAgB,OAAQ,MAAM;QAC5C,CAAC;IAGH,OAAO;AACT;AAEO,MAAM,0BAA0B;IACrC,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,kHAAA,CAAA,kBAAe,CAAC,MAAM;IACrE,OAAO,CAAC,OAAO,EAAE,kHAAA,CAAA,kBAAe,CAAC,YAAY,EAAE;AACjD","debugId":null}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/lib/vapi.sdk.ts"],"sourcesContent":["import Vapi from '@vapi-ai/web';\n\nexport const vapi = new Vapi(process.env.NEXT_PUBLIC_VAPI_WEB_TOKEN!);"],"names":[],"mappings":";;;AAAA;;AAEO,MAAM,OAAO,IAAI,mJAAA,CAAA,UAAI","debugId":null}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/components/Loader.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Loader = () => {\n  return (\n    <StyledWrapper>\n      <div className=\"spinner\">\n        <div className=\"spinner1\" />\n      </div>\n    </StyledWrapper>\n  );\n}\n\nconst StyledWrapper = styled.div`\n  .spinner {\n    background-image: linear-gradient(rgb(186, 66, 255) 35%,rgb(0, 225, 255));\n    width: 100px;\n    height: 100px;\n    animation: spinning82341 1.7s linear infinite;\n    text-align: center;\n    border-radius: 50px;\n    filter: blur(1px);\n    box-shadow: 0px -5px 20px 0px rgb(186, 66, 255), 0px 5px 20px 0px rgb(0, 225, 255);\n  }\n\n  .spinner1 {\n    background-color: rgb(36, 36, 36);\n    width: 100px;\n    height: 100px;\n    border-radius: 50px;\n    filter: blur(10px);\n  }\n\n  @keyframes spinning82341 {\n    to {\n      transform: rotate(360deg);\n    }\n  }`;\n\nexport default Loader;\n"],"names":[],"mappings":";;;;AACA;;;AAEA,MAAM,SAAS;IACb,qBACE,8OAAC;kBACC,cAAA,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;;;;;;;;;;;;;;;AAIvB;AAEA,MAAM,gBAAgB,2KAAA,CAAA,UAAM,CAAC,GAAG;;;EAAA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;GAwB9B,CAAC;uCAEW","debugId":null}},
    {"offset": {"line": 423, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/components/Loading.tsx"],"sourcesContent":["// app/loading.tsx\nimport Loader from '@/components/Loader';\n\nexport default function Loading() {\n  return (\n    <div className=\"fixed inset-0 z-20 flex items-center  justify-center\">\n          <div className=\"  rounded-lg flex flex-col items-center\">\n            <div className=\" border-t-transparent rounded-full z-20 \"></div>\n             <Loader /> \n          </div>\n        </div>\n  );\n}\n"],"names":[],"mappings":"AAAA,kBAAkB;;;;;AAClB;;;AAEe,SAAS;IACtB,qBACE,8OAAC;QAAI,WAAU;kBACT,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC;oBAAI,WAAU;;;;;;8BACd,8OAAC,qHAAA,CAAA,UAAM;;;;;;;;;;;;;;;;AAIpB","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/pc/Downloads/IntervueAI-main/IntervueAI-main/components/Agent.tsx"],"sourcesContent":["'use client';\n\nimport { cn } from '@/lib/utils';\nimport { vapi } from '@/lib/vapi.sdk';\n\n\nimport Image from 'next/image'\nimport { useRouter } from 'next/navigation';\nimport React, { useEffect, useState } from 'react'\nimport Loading from './Loading';\n\nenum CallStatus {\n    INACTIVE = 'INACTIVE',\n    CONNECTING = 'CONNECTING',\n    ACTIVE = 'ACTIVE',\n    FINISHED = 'FINISHED',\n}\n\ninterface SavedMessage {\n  role: 'user' | 'system' | 'assistant';\n  content: string;\n}\nconst Agent = ({userName, userId, type}: AgentProps) => {\n  const router = useRouter();\n  const [isRedirecting, setIsRedirecting] = useState(false)\n  const [isSpeaking, setIsSpeaking] = useState(false);\n  const [callStatus, setCallStatus] = useState<CallStatus>(CallStatus.INACTIVE)\n  const [messages, setMessages] = useState<SavedMessage[]>([]);\n\n   // const callStatus = CallStatus.ACTIVE;\n    //const isSpeaking = true;\n    //const messages = [\n     //   'Whats your name?',\n     //   'My name is John Doe, nice to meet you!'\n    //];\n\n    useEffect(() => {\n   const onCallStart = () => setCallStatus(CallStatus.ACTIVE);\n   const onCallEnd = () => setCallStatus(CallStatus.FINISHED);\n   const onMessage = (message: Message) => {\n    if(message.type === 'transcript' && message.transcriptType === 'final'){\n      const newMessage = { role: message.role, content: message.transcript}\n      setMessages((prev) => [...prev,newMessage]);\n    }\n   }\n   const onSpeechStart = () => setIsSpeaking(true);\n   const onSpeechEnd = () => setIsSpeaking(false);\n  const onError = (error: Error) => console.log('Error',error);\n  vapi.on('call-start',onCallStart);\n  vapi.on('call-end',onCallEnd);\n  vapi.on('message',onMessage)\n  vapi.on('speech-start',onSpeechStart);\n  vapi.on('speech-end',onSpeechEnd);\n  vapi.on('error',onError);\n\n  return () => {\n    vapi.off('call-start',onCallStart);\n    vapi.off('call-end',onCallEnd);\n    vapi.off('message',onMessage)\n    vapi.off('speech-start',onSpeechStart);\n    vapi.off('speech-end',onSpeechEnd);\n    vapi.off('error',onError);\n  }\n    }, [])\n    useEffect(() => {\n      if(callStatus === CallStatus.FINISHED) {\n        setIsRedirecting(true); // Trigger loader before navigation\n        router.push('/dashboard');\n      }\n      \n    },[callStatus, router]); // ✅ include dependencies)\n    \n    const handleCall = async () => {\n      setCallStatus(CallStatus.CONNECTING);\n      await vapi.start(process.env.NEXT_PUBLIC_VAPI_WORKFLOW_ID!,{\n        variableValues:{\n          username: userName,\n          userid:userId,\n        }\n      })\n    }\n    const handleDisconnect = async () => {\n      setCallStatus(CallStatus.FINISHED);\n      vapi.stop();\n    }\n                      \n    const latestMessage = messages[messages.length - 1]?.content;\n\n    const isCallInactiveOrFinished = callStatus === CallStatus.INACTIVE || callStatus === CallStatus.FINISHED;\n\n  return (\n    <>\n    <div className='call-view'>\n    {isRedirecting && (\n  <div >\n    <Loading />\n  </div>\n)}\n        <div className='card-interviewer'>\n            <div className='avatar' ><Image src=\"/Connor.webp\" alt=\"connor\" width={114} height={65} className='object-cover rounded-full'/>{isSpeaking && <span className='animate-speak'/>}</div>\n            <h3>Connor </h3>\n            <h4>Interview Architect\n\n</h4>\n        </div>\n        <div className='card-border'>\n            <div className='card-content'>\n                <Image src=\"/user-avatar.png\" width={540} height={540}  className=\"rounded-full object-cover size-[120px]\" alt=\"user\" /> <h3>{userName}</h3>\n            </div>\n        </div>\n    </div>\n\n      {messages.length > 0 && (\n        <div className='transcript-border' >\n            <div className='transcript'>\n                <p key={latestMessage} className={cn('transition-opacity duration-500 opacity-0', 'animate-fadeIn opacity-100')}>{latestMessage}</p>\n            </div>\n        </div>\n      )}\n\n    <div className='w-full flex justify-center'>\n    {callStatus !== 'ACTIVE' ? (\n  <button className='realtive btn-call' onClick={handleCall}>\n    <span className={cn( 'absolute animate-ping rounded-full opacity-75', callStatus !== 'CONNECTING' && 'hidden' )}\n       />\n      <span>\n      { isCallInactiveOrFinished ? 'Call' : '. . .'}\n      </span>\n    \n  </button>\n) : (\n  <button className='btn-disconnect' onClick={handleDisconnect}>\n    End\n  </button>\n)}\n\n    </div>\n    </>\n  )\n}\n\nexport default Agent"],"names":[],"mappings":";;;;AAEA;AACA;AAGA;AACA;AACA;AACA;AATA;;;;;;;;AAWA,IAAA,AAAK,oCAAA;;;;;WAAA;EAAA;AAWL,MAAM,QAAQ,CAAC,EAAC,QAAQ,EAAE,MAAM,EAAE,IAAI,EAAa;IACjD,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACnD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD;IAC3C,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB,EAAE;IAE1D,wCAAwC;IACvC,0BAA0B;IAC1B,oBAAoB;IACnB,wBAAwB;IACxB,6CAA6C;IAC9C,IAAI;IAEJ,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACX,MAAM,cAAc,IAAM;QAC1B,MAAM,YAAY,IAAM;QACxB,MAAM,YAAY,CAAC;YAClB,IAAG,QAAQ,IAAI,KAAK,gBAAgB,QAAQ,cAAc,KAAK,SAAQ;gBACrE,MAAM,aAAa;oBAAE,MAAM,QAAQ,IAAI;oBAAE,SAAS,QAAQ,UAAU;gBAAA;gBACpE,YAAY,CAAC,OAAS;2BAAI;wBAAK;qBAAW;YAC5C;QACD;QACA,MAAM,gBAAgB,IAAM,cAAc;QAC1C,MAAM,cAAc,IAAM,cAAc;QACzC,MAAM,UAAU,CAAC,QAAiB,QAAQ,GAAG,CAAC,SAAQ;QACtD,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,cAAa;QACrB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,YAAW;QACnB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,WAAU;QAClB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,gBAAe;QACvB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,cAAa;QACrB,kHAAA,CAAA,OAAI,CAAC,EAAE,CAAC,SAAQ;QAEhB,OAAO;YACL,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAa;YACtB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,YAAW;YACpB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,WAAU;YACnB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,gBAAe;YACxB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,cAAa;YACtB,kHAAA,CAAA,OAAI,CAAC,GAAG,CAAC,SAAQ;QACnB;IACE,GAAG,EAAE;IACL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAG,2BAAoC;YACrC,iBAAiB,OAAO,mCAAmC;YAC3D,OAAO,IAAI,CAAC;QACd;IAEF,GAAE;QAAC;QAAY;KAAO,GAAG,0BAA0B;IAEnD,MAAM,aAAa;QACjB;QACA,MAAM,kHAAA,CAAA,OAAI,CAAC,KAAK,2EAA2C;YACzD,gBAAe;gBACb,UAAU;gBACV,QAAO;YACT;QACF;IACF;IACA,MAAM,mBAAmB;QACvB;QACA,kHAAA,CAAA,OAAI,CAAC,IAAI;IACX;IAEA,MAAM,gBAAgB,QAAQ,CAAC,SAAS,MAAM,GAAG,EAAE,EAAE;IAErD,MAAM,2BAA2B,6BAAsC;IAEzE,qBACE;;0BACA,8OAAC;gBAAI,WAAU;;oBACd,+BACH,8OAAC;kCACC,cAAA,8OAAC,sHAAA,CAAA,UAAO;;;;;;;;;;kCAGJ,8OAAC;wBAAI,WAAU;;0CACX,8OAAC;gCAAI,WAAU;;kDAAU,8OAAC,6HAAA,CAAA,UAAK;wCAAC,KAAI;wCAAe,KAAI;wCAAS,OAAO;wCAAK,QAAQ;wCAAI,WAAU;;;;;;oCAA8B,4BAAc,8OAAC;wCAAK,WAAU;;;;;;;;;;;;0CAC9J,8OAAC;0CAAG;;;;;;0CACJ,8OAAC;0CAAG;;;;;;;;;;;;kCAIR,8OAAC;wBAAI,WAAU;kCACX,cAAA,8OAAC;4BAAI,WAAU;;8CACX,8OAAC,6HAAA,CAAA,UAAK;oCAAC,KAAI;oCAAmB,OAAO;oCAAK,QAAQ;oCAAM,WAAU;oCAAyC,KAAI;;;;;;gCAAS;8CAAC,8OAAC;8CAAI;;;;;;;;;;;;;;;;;;;;;;;YAKvI,SAAS,MAAM,GAAG,mBACjB,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;oBAAI,WAAU;8BACX,cAAA,8OAAC;wBAAsB,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;kCAAgC;uBAA1G;;;;;;;;;;;;;;;0BAKpB,8OAAC;gBAAI,WAAU;0BACd,eAAe,yBAClB,8OAAC;oBAAO,WAAU;oBAAoB,SAAS;;sCAC7C,8OAAC;4BAAK,WAAW,CAAA,GAAA,4GAAA,CAAA,KAAE,AAAD,EAAG,iDAAiD,eAAe,gBAAgB;;;;;;sCAEnG,8OAAC;sCACC,2BAA2B,SAAS;;;;;;;;;;;yCAK1C,8OAAC;oBAAO,WAAU;oBAAiB,SAAS;8BAAkB;;;;;;;;;;;;;AAQhE;uCAEe","debugId":null}}]
}